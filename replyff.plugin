import os
import json
import time
from pyrogram import Client, filters
from pyrogram.types import Message
from exteragram import ExteraGramPlugin

class AutoReplyLock(ExteraGramPlugin):
    __doc__ = """
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    
    –ö–æ–º–∞–Ω–¥—ã:
    .lock [@user|–æ—Ç–≤–µ—Ç] <—Ç–µ–∫—Å—Ç> - –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫
    .unlock [@user|–æ—Ç–≤–µ—Ç] - —É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞
    .locklist - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫
    """
    __version__ = "2.0"
    
    def __init__(self):
        self.locked_users = {}
        self.data_file = "autoreply_data.json"
        self.load_data()
        
    def load_data(self):
        if os.path.exists(self.data_file):
            with open(self.data_file, 'r') as f:
                self.locked_users = json.load(f)
    
    def save_data(self):
        with open(self.data_file, 'w') as f:
            json.dump(self.locked_users, f)

    @ExteraGramPlugin.on_cmd("lock")
    async def lock_user(self, client: Client, message: Message):
        """–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            if message.reply_to_message:
                user = message.reply_to_message.from_user
                text = " ".join(message.command[1:])
            else:
                if len(message.command) < 3:
                    return await message.edit("‚ùå –ù—É–∂–µ–Ω —Ç–µ–∫—Å—Ç: <code>.lock @user —Ç–µ–∫—Å—Ç</code>")
                user = await client.get_users(message.command[1])
                text = " ".join(message.command[2:])
            
            chat_id = str(message.chat.id)
            user_id = str(user.id)
            
            if chat_id not in self.locked_users:
                self.locked_users[chat_id] = {}
                
            self.locked_users[chat_id][user_id] = text
            self.save_data()
            
            await message.edit(f"‚úÖ {user.first_name} –¥–æ–±–∞–≤–ª–µ–Ω")
            await message.delete()
        except Exception as e:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

    @ExteraGramPlugin.on_cmd("unlock")
    async def unlock_user(self, client: Client, message: Message):
        """–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            if message.reply_to_message:
                user = message.reply_to_message.from_user
            else:
                if len(message.command) < 2:
                    return await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ: <code>.unlock @user</code>")
                user = await client.get_users(message.command[1])
                
            chat_id = str(message.chat.id)
            user_id = str(user.id)
            
            if chat_id in self.locked_users and user_id in self.locked_users[chat_id]:
                del self.locked_users[chat_id][user_id]
                self.save_data()
                await message.edit(f"‚úÖ {user.first_name} —É–¥–∞–ª–µ–Ω")
            else:
                await message.edit("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
            await message.delete()
        except Exception as e:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

    @ExteraGramPlugin.on_cmd("locklist")
    async def list_locked(self, client: Client, message: Message):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫"""
        try:
            chat_id = str(message.chat.id)
            if chat_id not in self.locked_users or not self.locked_users[chat_id]:
                return await message.edit("‚ùå –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç")
                
            users = []
            for user_id, text in self.locked_users[chat_id].items():
                try:
                    user = await client.get_users(int(user_id))
                    name = user.first_name
                    if user.username:
                        name = f"@{user.username}"
                    users.append(f"‚Ä¢ {name}: {text}")
                except:
                    users.append(f"‚Ä¢ ID:{user_id}: {text}")
                    
            await message.edit("üîí –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ:\n" + "\n".join(users))
            await message.delete()
        except Exception as e:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

    @ExteraGramPlugin.on_message(filters.incoming & ~filters.me)
    async def watcher(self, client: Client, message: Message):
        """–û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        try:
            if not message.from_user:
                return
                
            chat_id = str(message.chat.id)
            user_id = str(message.from_user.id)
            
            if chat_id in self.locked_users and user_id in self.locked_users[chat_id]:
                await message.reply(self.locked_users[chat_id][user_id])
        except:
            pass

def __load__():
    return AutoReplyLock()
